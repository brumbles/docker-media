version: "3"

networks:
  web:
    external: true
  internal:
    external: false

services:
  jellyfin:
    container_name: jellyfin
    image: linuxserver/jellyfin
    restart: unless-stopped
    ports:
      - 8096:8096
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - "${TVDIR}:/media/tv"
      - "${MOVIESDIR}:/media/movies"
      - /mnt/usbstorage/Anime/Movies:/anime/movies
      - /mnt/usbstorage/Anime/TV:/anime/tv
      - /mnt/usbstorage/Music:/music
      - /mnt/usbstorage/Audibooks:/audiobooks
      - /mnt/usbstorage/Books:/books
      - /mnt/usbstorage/Comics:/comics
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
      - web
    labels:
      - traefik.backend=jellyfin
      - traefik.frontend.rule=Host:jellyfin.${DOMAIN},watch.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=8096
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:preview
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sonarr:/config
      - ${DLDIR}:/downloads
      - ${TVDIR}:/tv
      - /mnt/usbstorage/Anime/TV:/animetv
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    networks:
      - internal
      - web
    labels:
      - traefik.backend=sonarr
      - traefik.frontend.rule=Host:sonarr.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=8989
  radarr:
    container_name: radarr
    image: linuxserver/radarr
    restart: unless-stopped
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr:/config
      - ${DLDIR}:/downloads
      - ${MOVIESDIR}:/movies    
      - /mnt/usbstorage/Anime/Movies:/animemovies
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    networks:
      - internal
      - web
    labels:
      - traefik.backend=radarr
      - traefik.frontend.rule=Host:radarr.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=7878
  lidarr:
    container_name: lidarr
    image: linuxserver/lidarr
    restart: unless-stopped
    ports:
      - 8686:8686
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./lidarr:/config
      - ${DLDIR}:/downloads   
      - /mnt/usbstorage/Music:/music
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - jackett
      - deluge
    networks:
      - internal
      - web
    labels:
      - traefik.backend=lidarr
      - traefik.frontend.rule=Host:lidarr.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=8686
       - traefik.port=7878
  ubooquity:
    container_name: ubooquity
    image: linuxserver/ubooquity
    restart: unless-stopped
    ports:
       - 2202:2202
       - 2203:2203
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./ubooquity:/config
      - /mnt/usbstorage/Books:/books  
      - /mnt/usbstorage/Comics:/comics
      - /mnt/usbstorage/Files:/files
      - /mnt/usbstorage/Audiobooks:/audiobooks
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
      - web
    labels:
      - traefik.backend=ubooquity
      - traefik.frontend.rule=Host:read.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=2202
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    restart: unless-stopped
    ports:
      - 3579:3579
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./ombi:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - internal
      - web
    networks:
      - internal
      - web
    labels:
      - traefik.backend=ombi
      - traefik.frontend.rule=Host:request.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=3579
    depends_on:
      - radarr
      - sonarr
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    ports:
      - 8112:8112
      - 8118:8118
      - 58846:58846
      - 58946:58946
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/London
    volumes:
      - ${DLDIR}:/downloads
      - ${TVDIR}:/media/tv
      - ${MOVIESDIR}:/media/movies
      - ./deluge:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    networks:
      - internal
      - web
    labels:
      - traefik.backend=deluge
      - traefik.frontend.rule=Host:deluge.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=8112
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./jackett:/config
      - ${DLDIR}:/downloads
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.http.routers.jackett.rule=Host(`jackett.${DOMAIN}`)"
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/London
    volumes:
      - ./heimdall:/config
    ports:
      - "8888:8888"
    restart: unless-stopped
    networks:
      - internal
      - web
    labels:
      - traefik.backend=heimdall
      - traefik.frontend.rule=Host:dash.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=8888
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=Europe/London
    volumes:
      - ./sabnzbd:/config
      - ${DLDIR}:/downloads
    ports:
      - 8080:8080
      - 9090:9090
    restart: unless-stopped
    labels:
      - traefik.backend=sabnzbd
      - traefik.frontend.rule=Host:sab.${DOMAIN}
      - traefik.docker.network=web
      - traefik.port=8888
    networks:
      - internal
      - web